const calculateMetrics = () => {
  let instanceCount = 1;  // Start with default values
  let memorySize = 1024;
  let diskSize = 10240;

  const scaleInOutData: any[] = [];
  const scaleUpDownData: any[] = [];

  for (let i = 0; i < 24 * 60; i++) {
    const time = new Date(2024, 0, 1);  // Use a fixed date, we only care about time
    time.setHours(Math.floor(i / 60), i % 60, 0, 0);
    const timeString = time.toTimeString().slice(0, 5);

    // Apply actions that occur at this time
    actions.forEach(action => {
      const actionTime = new Date(action.datetime);
      if (actionTime.getHours() === time.getHours() && actionTime.getMinutes() === time.getMinutes()) {
        switch (action.action) {
          case 2: // Scale In
          case 3: // Scale Out
            instanceCount = action.params?.no_of_instances ?? instanceCount;
            break;
          case 4: // Scale Up
          case 5: // Scale Down
            memorySize = action.params?.memory_size ?? memorySize;
            diskSize = action.params?.disk_size ?? diskSize;
            break;
        }
      }
    });

    // Push data points after applying actions
    scaleInOutData.push({ time: timeString, instances: instanceCount });
    scaleUpDownData.push({ time: timeString, memory: memorySize, disk: diskSize });
  }

  return { scaleInOutData, scaleUpDownData };
};
