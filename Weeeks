import React, { useState, useEffect } from 'react';
import { FaPlusCircle, FaMinusCircle } from 'react-icons/fa';
import './Weekly.css';

function Weekly({ weekData, setWeekData }) {
  const [days, setDays] = useState({
    Monday: [],
    Tuesday: [],
    Wednesday: [],
    Thursday: [],
    Friday: [],
    Saturday: [],
    Sunday: [],
  });

  useEffect(() => {
    if (weekData) {
      setDays(weekData);
    }
  }, [weekData]);

  useEffect(() => {
    setWeekData(days);
  }, [days, setWeekData]);

  const [timeInputs, setTimeInputs] = useState({
    Monday: '',
    Tuesday: '',
    Wednesday: '',
    Thursday: '',
    Friday: '',
    Saturday: '',
    Sunday: '',
  });
  const [actionInputs, setActionInputs] = useState({
    Monday: '',
    Tuesday: '',
    Wednesday: '',
    Thursday: '',
    Friday: '',
    Saturday: '',
    Sunday: '',
  });

  const addAction = (day) => {
    if (timeInputs[day] && actionInputs[day]) {
      setDays((prevDays) => ({
        ...prevDays,
        [day]: [
          ...prevDays[day],
          { id: Math.random().toString(36).substr(2, 9), time: timeInputs[day], action: actionInputs[day] },
        ],
      }));
      setTimeInputs((prevInputs) => ({ ...prevInputs, [day]: '' }));
      setActionInputs((prevInputs) => ({ ...prevInputs, [day]: '' }));
    } else {
      alert('Please fill in both time and action.');
    }
  };

  const removeAction = (day, id) => {
    setDays((prevDays) => ({
      ...prevDays,
      [day]: prevDays[day].filter((action) => action.id !== id),
    }));
  };

  return (
    <div className="App">
      {Object.keys(days).map((day) => (
        <div key={day} className="day-schedule">
          <h2>{day}</h2>
          <hr />
          {days[day].map((action) => (
            <div key={action.id} className="action-item">
              <span>{action.time}</span>
              <span>{action.action}</span>
              <FaMinusCircle onClick={() => removeAction(day, action.id)} />
            </div>
          ))}
          <hr />
          <div className="action-inputs">
            <input
              type="time"
              className="time"
              value={timeInputs[day]}
              onChange={(e) => setTimeInputs((prevInputs) => ({ ...prevInputs, [day]: e.target.value }))}
            />
            <select
              value={actionInputs[day]}
              className="action"
              onChange={(e) => setActionInputs((prevInputs) => ({ ...prevInputs, [day]: e.target.value }))}
            >
              <option value="">Select Action</option>
              <option value="Scale Up">Scale Up</option>
              <option value="Scale Down">Scale Down</option>
              <option value="Terminate">Terminate</option>
              <option value="Restart">Restart</option>
            </select>
            <FaPlusCircle onClick={() => addAction(day)} />
          </div>
        </div>
      ))}
    </div>
  );
}

export default Weekly;
