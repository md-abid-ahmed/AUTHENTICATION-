import React, { useState } from 'react';

import './policy.css';
import Weekly from './Weekly';
// import Daily from './Daily';
import Monthly from '../Monthly';
import Smartifi from './Smartifi';

function Policy() {
  const [selectedPlan, setSelectedPlan] = useState<string>('monthly');
  const [selectedAppId, setSelectedAppId] = useState<string>('');
  const [showPopup, setShowPopup] = useState<boolean>(false);
  const [selectedDay, setSelectedDay] = useState<string>('');
  const [weekIndex, setWeekIndex] = useState<number | null>(null);

  const appIds: string[] = ['12345', '67890', '54321', '09876', '11223'];

  const handleSubmitClick = (day: string, weekIndex: number | null = null): void => {
    setSelectedDay(day);
    setWeekIndex(weekIndex);
    setShowPopup(true);
  };

  const handleConfirmSubmit = (): void => {
    setShowPopup(false);
    // Handle submission confirmation
  };

  return (
    <div className="policy-App policy-wells-fargo-theme">
      <div className="policy-navbar policy-premium-style">
        <h1>Scheduler App</h1>
        <div className="policy-plan-selector">
          <label className="policy-radioLabel">
            <input
              type="radio"
              value="daily"
              checked={selectedPlan === 'daily'}
              onChange={() => setSelectedPlan('daily')}
            />
            Daily
          </label>
          <label className="policy-radioLabel">
            <input
              type="radio"
              value="weekly"
              checked={selectedPlan === 'weekly'}
              onChange={() => setSelectedPlan('weekly')}
            />
            Weekly
          </label>
          <label className="policy-radioLabel">
            <input
              type="radio"
              value="monthly"
              checked={selectedPlan === 'monthly'}
              onChange={() => setSelectedPlan('monthly')}
            />
            Monthly
          </label>
          <label className="policy-radioLabel">
            <input
              type="radio"
              value="smartifi"
              checked={selectedPlan === 'smartifi'}
              onChange={() => setSelectedPlan('smartifi')}
            />
            Smartifi
          </label>
        </div>
        <div className="policy-app-id">
          <label htmlFor="app-id-select">App ID:</label>
          <select
            id="app-id-select"
            value={selectedAppId}
            onChange={(e) => setSelectedAppId(e.target.value)}
          >
            <option value="">Select an App ID</option>
            {appIds.map((appId) => (
              <option key={appId} value={appId}>
                {appId}
              </option>
            ))}
          </select>
        </div>
      </div>

      {/* {selectedPlan === 'daily' && <Daily />}*/}
      {selectedPlan === 'weekly' && <Weekly />}
      {selectedPlan === 'monthly' && <Monthly />}
      {selectedPlan === 'smartifi' && <Smartifi />} 
    </div>
  );
}

export default Policy;
/* Global Styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Roboto', sans-serif;
    background: linear-gradient(to right, #f4c542, #bf1e2e);
    color: #333;
}

.policy-navbar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px 20px;
    background-color: #bf1e2e;
    color: white;
    border-radius: 10px;
}

.policy-navbar h1 {
    font-size: 2em;
}

.policy-app-id label {
    margin-right: 10px;
    font-size: 1.2em;
    font-weight: bold;
}

.policy-app-id select {
    padding: 10px 15px;
    border: none;
    border-radius: 5px;
    background: #f4c542;
    color: #333;
    font-size: 1em;
    font-weight: bold;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    transition: background-color 0.3s ease, color 0.3s ease;
}

.policy-app-id select:hover {
    background: #e5b933;
    color: #222;
}

.policy-nav-buttons button {
    padding: 10px 20px;
    font-size: 1em;
    margin-top: 20px;
    cursor: pointer;
    border: none;
    border-radius: 5px;
    background: #bf1e2e;
    color: white;
    transition: background-color 0.3s ease;
}

.policy-nav-buttons button:hover {
    background: #a5171a;
}

/* Styles for Monthly Plan */
.policy-monthly-plan .policy-monthly-week {
    margin-bottom: 20px;
}

.policy-monthly-week h3 {
    display: flex;
    justify-content: space-between;
    align-items: center;
    cursor: pointer;
}

.policy-monthly-day {
    margin-bottom: 10px;
}

.policy-monthly-day .policy-date {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
}

.policy-monthly-day .policy-add-icon {
    cursor: pointer;
    color: #bf1e2e;
    font-size: 1.5em;
    transition: color 0.3s ease;
}

.policy-monthly-day .policy-add-icon:hover {
    color: #a5171a;
}

.policy-action-creator {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 10px;
    padding: 10px;
    background: #fff;
    border-radius: 5px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.policy-action-creator input,
.policy-action-creator select {
    padding: 5px;
    margin-right: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 1em;
}

.policy-action-creator select {
    cursor: pointer;
}

.policy-modal {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: white;
    padding: 20px;
    border-radius: 5px;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
    z-index: 1000;
}

.policy-modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 999;
    display: flex;
    justify-content: center;
    align-items: center;
}

.policy-plan-selector {
    display: flex;
    gap: 1rem;
}

.policy-radioLabel {
    display: flex;
    align-items: center;
    font-size: 1rem;
    color: #333;
}

.policy-radioLabel input[type="radio"] {
    margin-right: 0.5rem;
    accent-color: #4caf50; /* Adjust this color to match your theme */
}
